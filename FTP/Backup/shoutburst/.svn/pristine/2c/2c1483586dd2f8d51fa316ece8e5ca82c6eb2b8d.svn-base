<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Tags extends CI_Controller {

	public function __construct()
	{
		parent::__construct();
		
		$data['title'] = TITLE.' | Tags';
		$this->load->vars($data);
		$this->load->model('Users_model');
		$this->load->model('Company_model');
		$this->load->model('Campaigns_model', 'campaigns');
				
		if( ! isset($this->session->userdata['user_id']) )
			redirect('login/index');
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	index
	 */
	public function index()
	{
		$comp_id = $this->session->userdata['comp_id'];
		
		# Get all Tags
		$data['tags'] = $this->db->get_where('tags', array('comp_id'=>$comp_id))->result();
		
		$this->load->template('tags/index', $data);
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	add
	 */
	public function add()
	{
		$comp_id = $this->session->userdata['comp_id'];
		
		# Get all Campaigns
		$data['campaigns'] = $this->getCampaignListFromModel($comp_id);
		
		# save posted varaibles in array variable
		$post = $this->input->post();
		
		if (isset($post) && !empty($post))
		{
			$tag_name = $post['tag_name'];
			
			# if already exists
			$this->db->where('tag_name', $tag_name);
			$return = $this->db->get_where('tags',array('comp_id'=>$comp_id))->row_array();
			
			if ( empty($return) )
			{
				# add campaign in to campaigns table
				if ( isset($post['campaign_name']) && !empty($post['campaign_name'])){
					$camp_ids = array();
					$camp_ids = $post['campaign_name'];

					$insert_data['camp_ids'] = json_encode($camp_ids);
				} else {
					$insert_data['camp_ids'] = 0;
				}
				
				$insert_data['tag_name'] = $tag_name;
				$insert_data['comp_id'] = $comp_id;
				$insert_data['data_set'] = $post['data_set'];
				$insert_data['details'] = json_encode( $post['details'] );
				
				if ($post['data_set'] == 'score_levels'){
					if ($post['details'] == 'B'){
						$score = array($post['start_score'], $post['score']);
					} else {
						$score = $post['score'];
					}
					$insert_data['score'] = json_encode( $score );
				}
				
				$this->db->insert('tags', $insert_data);
				$this->session->set_flashdata('message', 'Add successfully.');
			} else {				
				$this->session->set_flashdata('message', 'Already exists.');
			}
			redirect('tags/add');
		}
		$this->load->template('tags/add', $data);
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	edit
	 */
	public function edit()
	{
		$comp_id = $this->session->userdata['comp_id'];
		
		# Get all Campaigns
		$data['campaigns'] = $this->getCampaignListFromModel($comp_id);
		
		$tag_id = $this->uri->segment(3);
		
		# save posted varaibles in array variable
		$post = $this->input->post();
		#var_debug($post);
		
		if (isset($post) && !empty($post))
		{
			$tag_name = $post['tag_name'];
			
			# if already exists
			$this->db->where('tag_name', $tag_name);
			$this->db->where('comp_id', $comp_id);
			$this->db->where('tag_id !=', $tag_id);
			$return = $this->db->get('tags')->row_array();
			
			if ( empty($return) )
			{
				$update_data['tag_name'] = $tag_name;
				$update_data['comp_id'] = $comp_id;
				$update_data['data_set'] = $post['data_set'];
				
				#TODO: http://php.refulz.com/regular-expressions-quick-guide-wildcards-samples/ For wildcard
				#$details = "'.*\'".$post['details']."$";
				
				$details = $post['details'];
				$update_data['details'] = json_encode( $details );
				
				if ($post['data_set'] == 'score_levels'){
					if ($details == 'B'){
						$score = array($post['start_score'], $post['score']);
					} else {
						$score = $post['score'];
					}
					$update_data['score'] = json_encode( $score );
				}				
				
				if ( isset($post['campaign_name']) && !empty($post['campaign_name'])){
					$update_data['camp_ids'] = json_encode($post['campaign_name']);
				} else {
					$update_data['camp_ids'] = 0;
				}
				
				$this->db->where('tag_id', $tag_id);
				$this->db->update('tags', $update_data);
				$this->session->set_flashdata('message', 'Edit successfully.');
			} else {
				$this->session->set_flashdata('message', 'Already exists.');
			}
			redirect('tags/edit/'.$tag_id);
		}
		
		if ( is_numeric($tag_id) ) {
			
			$tag = $this->db->get_where('tags', array('tag_id'=>$tag_id, 'comp_id'=>$comp_id))->result();
		
			if (!empty($tag))
			{
				$data['tag'] = $tag;				
			} else {
				redirect('tags');
			}
			
			if (isset($data['tag'][0]->data_set)){
				$data_set = $data['tag'][0]->data_set;
				$data['details'] = $this->load_data_set_detail('load', $data_set, $tag_id);
			}			
			$this->load->template('tags/edit', $data);
		
		} else {
			redirect('tags');
		}
	}

	/*
	 * @author:	Muhammad Sajid
	 * @name:	delete
	 */
	public function delete()
	{
		$tag_id = $this->uri->segment(3);
		$action = $this->uri->segment(4);
		
		if ( is_numeric($tag_id) )
		{
			$statusUpdate	=	0;
			$msg			= 'Tag Disable';
			//if status is enable 
			if($action=='enable'){
				$statusUpdate = 1;
				$msg			= 'Tag Enable';
			}
			
			$this->db->where('tag_id', $tag_id);
			$this->db->update('tags', array('status' => 0));
			#$this->session->set_flashdata('message', "$msg successfully.");				
		} else {
			$this->session->set_flashdata('message', 'Error while deleting.');
		}
		#redirect('tags');
	}

	/*
	 * @author:	Muhammad Sajid
	 * @name:	add_group
	 */
	public function add_group()
	{
		$comp_id = $this->session->userdata['comp_id'];
		
		# Get all Tags
		$data['tags'] = $this->db->get_where('tags', array('comp_id'=>$comp_id))->result();
		
		# save posted varaibles in array variable
		$post = $this->input->post();
		#var_debug($post);
		
		if (isset($post) && !empty($post))
		{
			$tg_name = $post['tg_name'];
			
			# if already exists
			$this->db->where('tg_name', $tg_name);
			$return = $this->db->get_where('tags_group', array('comp_id'=>$comp_id))->row_array();
			
			if ( empty($return) )
			{
				$insert_data['tg_name'] = $tg_name;
				$insert_data['comp_id'] = $comp_id;
				if ( isset($post['tags']) && !empty($post['tags'])){
					$insert_data['tag_ids'] = json_encode($post['tags']);
				} else {
					$insert_data['tag_ids'] = 0;
				}
				$this->db->insert('tags_group', $insert_data);
				$this->session->set_flashdata('message', 'Add successfully.');
			} else {				
				$this->session->set_flashdata('message', 'Already exists.');
			}
			redirect('tags/add_group');
		}
		$this->load->template('tags/add_group_tag', $data);
	}
	
	
	/**
	 * Get Campaign List From Model
	 * */
	function getCampaignListFromModel($comp_id){
		return $this->campaigns->getCampaignList($comp_id);
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	load_data_set_detail
	 */
	function load_data_set_detail($action, $data_set, $tag_id = null)
	{
		$comp_id = $this->session->userdata['comp_id'];
		
		if ( is_numeric($tag_id) )
		{
			$this->db->select('data_set');
			$this->db->select('details');
			$this->db->select('score');
			$tag = $this->db->get_where('tags', array('tag_id'=>$tag_id, 'comp_id'=>$comp_id))->result();
			
			if (!empty($tag)){
				$selected_data_set = $tag[0]->data_set;
				$dataSetSelectedOptions = $tag[0]->details;
				$selected_score = $tag[0]->score;
			}
		}
		
		//selected data_set options
		$dataSetSelectedArray	=	array();
		if(!empty($dataSetSelectedOptions) && $dataSetSelectedOptions!= null && $dataSetSelectedOptions != 'null'){
			$dataSetSelectedArray = json_decode($dataSetSelectedOptions);
		}
		
		switch ($data_set)
		{
			case 'teams':
				$detail = '';
				$teams = $this->users_model->get_teams($comp_id);
				if (!empty($teams) && $teams != 0)
				{
					$detail .= '<select name="details[]" multiple="multiple" id="details" class="sb-control">';
					
					foreach ($teams as $t)
					{
						$selected = '';
						if ( isset($dataSetSelectedArray) && !empty($dataSetSelectedArray) &&
							$selected_data_set == 'teams' && in_array($t->team_id,$dataSetSelectedArray) ){
							$selected = "selected";
						}
						$detail .= '<option value="'.$t->team_id.'" '.$selected.'>'.$t->team_title.'</option>';
					}

					$detail = $detail . '</select>';
				}
			break;
			
			case 'agents':
				$detail = '';
				# Get all users		
				$agents = $this->Users_model->get_users($comp_id, COMP_AGENT);
				if (!empty($agents) && $agents != 0)
				{
					$detail .= '<select name="details[]" multiple="multiple" id="details" class="sb-control">';
					
					foreach ($agents as $a)
					{
						$selected = '';
						if ( isset($dataSetSelectedArray) && !empty($dataSetSelectedArray) &&
							$selected_data_set == 'agents' && in_array($a->user_id,$dataSetSelectedArray) ){
							$selected = "selected";
						}
						
						$detail .= '<option value="'.$a->user_id.'" '.$selected.'>'.$a->full_name.'</option>';
					}

					$detail = $detail . '</select>';
				}
			break;
			
			case 'score_levels':
				
				$scores = '';
				$detail = '';
				
				$scoreLevelOpt = array(
										'G'=>'Greater Than',
										'L'=>'Less Than',
										'E'=>'Equal To',
										'B'=>'Between'
										);
				
				$detail .= '<div class="row"><div class="col-xs-8"><select name="details" id="details" class="sb-control">';
				
					foreach($scoreLevelOpt as $key => $value){
						
						$selected = '';
						if ( isset($dataSetSelectedArray) && !empty($dataSetSelectedArray) && 
							 $selected_data_set == 'score_levels' && $key == $dataSetSelectedArray ){
							 $selected = "selected";
						}
									$detail .="<option value='$key' $selected>$value</option>";
					}
				$detail .='</select></div>';
				
				# input fields for score
				$style = 'style="display:none;"';
				$score_0 = 0;
				$score_1 = 0;
				if ( isset($dataSetSelectedOptions) && !empty($dataSetSelectedOptions) && json_decode($dataSetSelectedOptions) == 'B' )
				{
					$score = json_decode($selected_score);
					$style = 'style="display:block;"';
					$score_0 = $score[0];
					$score_1 = $score[1];
				} else if ( isset($dataSetSelectedOptions) && !empty($dataSetSelectedOptions) && json_decode($dataSetSelectedOptions) != 'B' ) {
					$score = json_decode($selected_score);
					$style = 'style="display:none;"';
					$score_1 = $score;
				}
				
				$scores .= '<div class="col-xs-2" '.$style.' id="div_start_score">
								<input class="txtTesting sb-control" type="text" value="'.$score_0.'" placeholder="0" name="start_score" id="start_score" maxlength="2" />
							</div>';
				$scores .= '<div class="col-xs-2"><input class="txtTesting sb-control" type="text" value="'.$score_1.'" placeholder="0" name="score" id="score" maxlength="2"></div></div>';
								
				$detail .= $scores;
				$script = '<script>
							$(document).ready(function(){	
								$("#details").change(function()
								{
									var value = $(this).val();
									if (value == "B"){
										$("#div_start_score").show();
									} else {
										$("#div_start_score").hide();
									}
								});
							})							
								$(".txtTesting").jStepper({minValue:0, maxValue:99, minLength:2});
							</script>';
				$detail .= $script;				
			break;
			
			case 'cli':
				
				if ( isset($dataSetSelectedArray) && !empty($dataSetSelectedArray) && $selected_data_set == 'cli' ){
					$detail = '<input type="text" name="details" id="details" value="'.$dataSetSelectedArray.'" pattern="[0-9]*" maxlength="4" class="sb-control">';
				} else {
					$detail = '<input type="text" name="details" id="details" value="" pattern="[0-9]*" maxlength="4" class="sb-control">';
				}
				$detail .= ' Enter first 4 digits';
			break;
			
			case 'transcriptions':
				
				if ( isset($dataSetSelectedArray) && !empty($dataSetSelectedArray) && $selected_data_set == 'transcriptions' ){
					$detail = '<input type="text" name="details" id="details" value="'.$dataSetSelectedArray.'" class="sb-control">';
				} else {
					$detail = '<input type="text" name="details" id="details" value="" class="sb-control">';
				}
			break;
			
			case 'sentiment':
				
				$sentimentOpt = array(
										'true'=>'True',
										'false'=>'False'
										);
										
				$detail = ' <select name="details" id="details" class="sb-control">';
					foreach($sentimentOpt as $key => $value){
						$selected = '';
						if($key == $dataSetSelectedArray){
							$selected = "selected";
						}
						$detail .="<option value='$key' $selected>$value</option>";
					}
				$detail .= '</select>';
			break;
			
			case '0':
				$detail = 'Please select Data Set';
			break;
		}
		
		if ($action == 'add' || $action == 'edit'){
			echo $detail;
		} elseif ($action == 'load'){
			return $detail;
		}
					
	}
	
}