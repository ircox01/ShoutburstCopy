<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Users extends CI_Controller {

	public function __construct()
	{
		parent::__construct();
		
		$data['title'] = TITLE.' | Users';
		$this->load->vars($data);
		$this->load->model('users_model');
		
		if( ! isset($this->session->userdata['user_id']) )
			redirect('login/index');
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	index
	 */
	public function index()
	{
		# get session variable
		$user_id = $this->session->userdata['user_id'];
		$comp_id = $this->session->userdata['comp_id'];

		# Get all users
		//$this->db->from('users u');
		//$this->db->join('user_companies uc', 'uc.user_id = u.user_id');
		//$this->db->where('uc.comp_id', $comp_id);
		//$this->db->where('uc.acc_id >', COMP_ADMIN);
	
		
		$data['users'] = $this->users_model->getUsers($comp_id);

		# Get all users		
	//	$data['users'] = $this->Users_model->get_users($comp_id);		

		$this->load->template('users/index', $data);
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	add
	 */
	public function add()
	{
		# get session variable
		$user_id = $this->session->userdata['user_id'];
		$comp_id = $this->session->userdata['comp_id'];
		
		# Get all Access Levels
		$data['access_levels'] = $this->users_model->getAccessList();
		
		# save posted varaibles in array variable
		$post = $this->input->post();
		
		
		if (isset($post) && !empty($post))
		{
			
			$user_name	=	rtrim($post['user_name']);
			$user_login	=	rtrim($post['user_login']);
			$password	=	rtrim($post['password']);
			$accessArr		= $post['accessArr'];
			$user_pin	=	rtrim($post['user_pin']);
			$user_email	=	rtrim($post['user_email']);
			$user_photo = "";
			//if field is not empty
			if($user_name!=''&&$user_login!=''&&$password!=''&&$user_pin!=''&&$user_email!='')
			{			
				# if already exists
				$return = $this->users_model->checkUser($comp_id,$user_email);
	
				if ( empty($return) )
				{
					$ret= $this->db->query("SELECT user_id FROM users WHERE email='{$user_email}'")->row_array();
					
					if( empty ($ret) )
					{				
						// Agent photo
						if( ($_FILES['user_photo']['error'] == 0) && sizeof($_FILES['user_photo']) > 0 )
						{
							
							$extentions = array('png','jpg','jpeg','gif');
							
							$dir = USER_PHOTO;							
								
							$name = $_FILES['user_photo']['name'];
							$tmp_name = $_FILES['user_photo']['tmp_name'];
							$size = $_FILES['user_photo']['size'];
							
							$explode = explode('.', $name);
							if( in_array($explode[1], $extentions) )
							{
								$user_photo = $this->utility_model->upload_file($explode[1], $tmp_name, $dir);
							}							
						}

						# insert into users
						$insert_agent['full_name'] = $user_name;
						$insert_agent['user_name'] = $user_login;
						$insert_agent['email'] = $user_email;
						//$insert_agent['user_pin'] = $user_pin;
						$insert_agent['password'] = md5($password);
						$insert_agent['photo'] = $user_photo;
						$insert_agent['created'] = date('Y-m-d');
						
						$insert_id=$this->users_model->addUser($insert_agent);
						
						$this->users_model->addUserComp($insert_id,$accessArr , $comp_id,$user_pin );
						
						$this->session->set_flashdata('message', '<div style="color:green">Added successfully.</div>');
					}
					else
					{
						$this->users_model->add($ret['user_id'],$comp_id,$accessArr,$user_pin);
						$this->session->set_flashdata('message', '<div style="color:green">Added successfully.</div>');						
					}
				}//end if(empty($return))
				 else {
					$this->session->set_flashdata('message', '<div style="color:red">Already exists.</div>');
				}
			}else {
				$this->session->set_flashdata('message', '<div style="color:red">Some required fields are missing.</div>');
			}
			redirect('users');
		}
		//$this->load->template('users/add', $data);
	
		$this->load->view('users/add', $data);
	}
	
	/*
	 * @author:	Muhammad Sajid
	 * @name:	edit
	 */
	public function edit()
	{
		# get session variable
		$comp_id = $this->session->userdata['comp_id'];		
		$user_id = $this->uri->segment(3);
		
		# save posted varaibles in array variable
		$post = $this->input->post();	
		
		if (isset($post) && !empty($post))
		{
			$post = $this->input->post();
		
			$user_name	=	rtrim($post['user_name']);
			$user_login	=	rtrim($post['user_login']);
			$password	=	rtrim($post['password']);
		//	$access		=	rtrim($post['access']);
			$accessArr		= $post['accessArr'];
			$user_pin	=	rtrim($post['user_pin']);
			$user_email	=	rtrim($post['user_email']);
			$old_photo	=	rtrim($post['old_photo']);
			
			//if field is not empty
			if( $user_name!='' && $user_login!='' &&  $user_pin!='' &&  $user_email!='')
			{
				
				# if already exists
				$this->db->from('users u');
				//$this->db->join('user_companies uc', 'uc.user_id = u.user_id');
				//$this->db->where('uc.comp_id', $comp_id);
			//	$this->db->where('u.email', $user_email);
			//	$this->db->where('u.user_pin', $user_pin);
				$this->db->where('u.user_id ',$user_id);
				$return = $this->db->get('users')->row_array();

				if ( !empty($return) )
				{
					// Agent photo
					if( ($_FILES['user_photo']['error'] == 0) && sizeof($_FILES['user_photo']) > 0 )
					{						
						$extentions = array('png','jpg','jpeg','gif');
						
						$dir = USER_PHOTO;							
							
						$name = $_FILES['user_photo']['name'];
						$tmp_name = $_FILES['user_photo']['tmp_name'];
						$size = $_FILES['user_photo']['size'];
						
						$explode = explode('.', $name);
						if( in_array($explode[1], $extentions) )
						{								
							$user_photo = $this->utility_model->upload_file($explode[1], $tmp_name, $dir);							
							//unlink old photo						
							if($old_photo!=''){
								//check old file exsist
									if (file_exists(PUBPATH.$old_photo)){
										unlink(PUBPATH.$old_photo);
									}
							}
						}						
						$update_agent['photo'] = $user_photo;
					}
					
					if (!empty($post['password']))
					{
						$update_agent['password'] = md5($post['password']);
					}					

					# update users
					$update_agent['full_name'] 		= $user_name;
					$update_agent['user_name'] 		= $user_login;
					$update_agent['email'] 			= $user_email;
					//$update_agent['user_pin'] 		= $user_pin;
					$this->db->where('user_id', $user_id);
					$this->db->update('users', $update_agent);
									
					$this->db->where('user_id', $user_id);
					$this->db->where('comp_id', $comp_id);
					$this->db->delete('user_companies');
					# update into user_companies
					foreach ($accessArr as $access)
					{						
						$update_uc['user_pin'] = $user_pin;						
						$update_uc['acc_id'] = $access;
						$update_uc['user_id'] = $user_id;
						$update_uc['comp_id'] = $comp_id;
						
					//	$this->db->where('user_id', $user_id);
					//	$this->db->where('comp_id', $comp_id);
						$this->db->insert('user_companies', $update_uc);
					}			
					
					$this->session->set_flashdata('message', '<div style="color:green">Update successfully.</div>');
				} 
				else
				{
					$this->session->set_flashdata('message', '<div style="color:red">Already exists.</div>');
				}
			}
			else
			{
				$this->session->set_flashdata('message', '<div style="color:red">Some required fields are missing.</div>');
			}
			
			redirect('users');
		}
		
		if ( is_numeric($user_id) ) {
			
			//$this->db->from('users u');
			//$this->db->join('user_companies uc', 'uc.user_id = u.user_id');
			//$this->db->where('uc.comp_id',$comp_id);
			//$this->db->where('u.user_id',$user_id);
		//	$user = $this->db->get()->result();
			
			$user =$this->db->query("SELECT u.user_id,u.full_name,u.user_name,u.email, uc.user_pin,u.status, u.photo, GROUP_CONCAT(uc.acc_id) AS acc_id
									FROM users u LEFT JOIN user_companies uc ON u.user_id=uc.user_id
									WHERE uc.comp_id={$comp_id} AND u.user_id=".$user_id)->result();
			if (!empty($user))
			{
				$data['user'] = $user;				
			}
			else
			{
				redirect('users');
			}
			
			$data['access_levels'] = $this->db->get_where('access_levels', array('acc_id >'=>COMP_ADMIN))->result();
		
			$this->load->view('users/edit', $data);
		}
		else
		{
			redirect('users');
		}
	}

	/*
	 * @author:	Muhammad Sajid
	 * @name:	delete
	 */
	public function delete()
	{
		# get session variable
		$comp_id = $this->session->userdata['comp_id'];
		
		$agent_id = $this->uri->segment(3);
		$action = $this->uri->segment(4);	
		
		if ( is_numeric($agent_id) )
		{
		
			$statusUpdate	=	0;
			$msg			= 'User Disable';
			//if status is enable 
			if($action=='enable'){
				$statusUpdate = 1;
				$msg			= 'User Enable';
			}
		
			$this->users_model->delete($agent_id,$comp_id,$statusUpdate);
			#$this->session->set_flashdata('message', "$msg successfully.");			
		} else {
			$this->session->set_flashdata('message', 'Error while deleting.');
		}
		//redirect('users');
	}

	/**
	 * 
	 */

}